
@{
    ViewBag.Title = "ResetPassword";
}

<div class="container reset-password-container my-5">
    <div class="row">
        <div class="col-12">
            <div class="zone-logo d-flex mb-3 justify-content-center">
                <img src="~/Assets/IMG/ZONERadar.png" alt="logo" class="logo">
            </div>
            <div class="reset-title mb-3 d-flex justify-content-center">
                <h2>請輸入您的新密碼</h2>
            </div>
            <form id="reset-password-form-vue">
                <div class="new-password mb-3 d-flex justify-content-center">
                    <span class="input-group-text" id="inputGroupPrepend">輸入新密碼</span>
                    <input v-model="inputData.newPassword" type="password" name="NewPassword" :class="{ 'is-invalid': inputDataCheck.newPasswordError }" class="input-password form-control" id="new-password" placeholder="輸入密碼" aria-describedby="inputGroupPrepend">
                    <div class="invalid-feedback text-start mt-1">
                        {{inputDataCheck.newPasswordErrorMsg}}
                    </div>
                </div>
                <div class="confirm-password mb-3 d-flex justify-content-center">
                    <span class="input-group-text" id="inputGroupPrepend">確認新密碼</span>
                    <input v-model="inputData.newConfirmPassword" type="password" name="NewConfirmPassword" :class="{ 'is-invalid': inputDataCheck.newConfirmPasswordError }" class="confirm-password form-control" id="new-confirm-password" placeholder="確認密碼" aria-describedby="inputGroupPrepend">
                    <div class="invalid-feedback text-start mt-1">
                        {{inputDataCheck.newConfirmPasswordErrorMsg}}
                    </div>
                </div>
                <div class="reset-password mb-3 d-flex justify-content-center">
                    <button type="button" class="btn" :disabled="!isVerify" id="reset-password-btn">重設密碼</button>
                </div>
            </form>            
        </div>
    </div>
</div>

@section topCSS
{
    <link href="~/Assets/CSS/membercenter/ResetPassword.css" rel="stylesheet" />
}

@section endJS
{
    <script>
        //#region 重設密碼前端驗證(Vue)
        let resetPassword_form_vue = new Vue({
            el: "#reset-password-form-vue",
            data: {
                inputData: {
                    newPassword: "",
                    newConfirmPassword: ""
                },
                inputDataCheck: {
                    newPasswordError: false,
                    newPasswordErrorMsg: "",
                    newConfirmPasswordError: false,
                    newConfirmPasswordErrorMsg: ""
                },
                isVerify: false
            },
            watch: {
                "inputData.newPassword": {
                    immediate: true,
                    handler() {
                        let passwordRegexp = /^(?!.*[^\x21-\x7e])(?=.{6,50})(?=.*[a-z])(?=.*[A-Z])(?=.*\d).*$/
                        if (this.inputData.newPassword == "") {
                            this.inputDataCheck.newPasswordError = true;
                            this.inputDataCheck.newPasswordErrorMsg = "請填寫此欄位";
                        } else if (this.inputData.newPassword.length < 6 || this.inputData.newPassword.length > 50) {
                            this.inputDataCheck.newPasswordError = true;
                            this.inputDataCheck.newPasswordErrorMsg = "密碼長度需為6~50字元";
                        } else if (!passwordRegexp.test(this.inputData.newPassword)) {
                            this.inputDataCheck.newPasswordError = true;
                            this.inputDataCheck.newPasswordErrorMsg = "密碼必須包含至少1個數字、小寫英文和大寫英文";
                        }
                        else {
                            this.inputDataCheck.newPasswordError = false;
                            this.inputDataCheck.newPasswordErrorMsg = "";
                        }
                        this.checkVerify();
                    }
                },
                "inputData.newConfirmPassword": {
                    immediate: true,
                    handler() {
                        if (this.inputDataCheck.newConfirmPasswordError == "") {
                            this.inputDataCheck.newConfirmPasswordError = true;
                            this.inputDataCheck.newConfirmPasswordErrorMsg = "請填寫此欄位";
                        } else if (this.inputData.newPassword !== this.inputData.newConfirmPassword) {
                            this.inputDataCheck.newConfirmPasswordError = true;
                            this.inputDataCheck.newConfirmPasswordErrorMsg = "密碼不一致";
                        } else {
                            this.inputDataCheck.newConfirmPasswordError = false;
                            this.inputDataCheck.newConfirmPasswordErrorMsg = "";
                        }
                        this.checkVerify();
                    }
                }
            },
            methods: {
                checkVerify() {
                    for (let prop in this.inputDataCheck) {
                        if (this.inputDataCheck[prop] == true) {
                            this.isVerify = false;
                            return;
                        }
                    }
                    this.isVerify = true;
                }
            }
        })
        //#endregion

        //#region 送資料到後端
        let resetPassword_btn = document.querySelector("#reset-password-btn");
        resetPassword_btn.addEventListener("click", function () {
            let new_password = document.querySelector("#new-password").value;
            let new_confirm_password = document.querySelector("#new-confirm-password").value;
            let resetPassword_form_data = new FormData();
            resetPassword_form_data.append("UserEmail", "@ViewData["Email"]");
            resetPassword_form_data.append("NewPassword", new_password);
            resetPassword_form_data.append("NewConfirmPassword", new_confirm_password);

            axios({
                url: "/MemberCenter/ResetPassword",
                method: "POST",
                data: resetPassword_form_data,
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/x-www-form-urlencoded"
                }
            }).then(response => {
                let icon_string;
                if (response.data.IsSuccessful) {
                    window.location.replace("/MemberCenter/ResetPasswordSuccess");
                } else {
                    icon_string = "error";
                    Swal.fire({
                        title: response.data.ShowMessage,
                        icon: icon_string,
                        showConfirmButton: true,
                        confirmButtonColor: "#be7418",
                        confirmButtonText: "OK",
                        position: "top"
                    })
                }
            }).catch(error => console.log(error))
        })
        //#endregion
    </script>
}