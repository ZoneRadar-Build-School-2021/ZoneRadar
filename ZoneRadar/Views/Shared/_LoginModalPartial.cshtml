
<!--登入表單-->
@*@using (Html.BeginForm("Login", "MemberCenter", new { ReturnUrl = Request.QueryString["ReturnUrl"] }, FormMethod.Post, new { @class = "mb-3" }))
{
    @Html.AntiForgeryToken()*@
    @*<input type="email" id="input-email-login" name="email" class="form-control form-control-lg d-block mb-3" placeholder="Email" aria-label="email" aria-describedby="basic-addon1" required>
        <input type="password" id="input-password-login" name="password" class="form-control form-control-lg d-block mb-3" placeholder="密碼" aria-label="password" aria-describedby="basic-addon2" required>*@
    @*@Html.EditorFor(model => model.LoginEmail, new { htmlAttributes = new { @class = "form-control form-control-lg d-block", type = "email", placeholder = "Email", required = "true" } })
    @Html.ValidationMessageFor(model => model.LoginEmail, "", new { @class = "text-danger d-block text-start mt-1" })
    @Html.EditorFor(model => model.LoginPassword, new { htmlAttributes = new { @class = "form-control form-control-lg d-block mt-3", type = "password", placeholder = "Password", required = "true" } })
    @Html.ValidationMessageFor(model => model.LoginPassword, "", new { @class = "text-danger d-block text-start mt-1" })
    <button id="login-submit" class="w-100 text-decoration-none text-white mt-3">登入</button>*@
@*}*@

<form class="mb-3" id="login-form-vue">
    @*@Html.AntiForgeryToken()*@
    <input v-model="inputData.account" type="email" id="LoginEmail" :class="{ 'is-invalid': inputDataCheck.accountError }" class="form-control form-control-lg d-block" placeholder="Email" aria-label="email" aria-describedby="basic-addon1" required>
    <div class="invalid-feedback text-start mt-1">
        {{inputDataCheck.accountErrorMsg}}
    </div>
    <input v-model="inputData.password" type="password" id="LoginPassword" :class="{ 'is-invalid': inputDataCheck.passwordError }" class="form-control form-control-lg d-block mt-3" placeholder="Password" aria-label="password" aria-describedby="basic-addon2" required>
    <div class="invalid-feedback text-start mt-1">
        {{inputDataCheck.passwordErrorMsg}}
    </div>

    @*@Html.EditorFor(model => model.LoginEmail, new { htmlAttributes = new { @class = "form-control form-control-lg d-block", type = "email", placeholder = "Email", required = "true" } })
        @Html.ValidationMessageFor(model => model.LoginEmail, "", new { @class = "text-danger d-block text-start mt-1" })
        @Html.EditorFor(model => model.LoginPassword, new { htmlAttributes = new { @class = "form-control form-control-lg d-block mt-3", type = "password", placeholder = "Password", required = "true" } })
        @Html.ValidationMessageFor(model => model.LoginPassword, "", new { @class = "text-danger d-block text-start mt-1" })*@

    <button type="button" id="login-submit" class="w-100 text-decoration-none text-white mt-3" data-bs-dismiss="modal" :disabled="!isVerify">登入</button>
</form>